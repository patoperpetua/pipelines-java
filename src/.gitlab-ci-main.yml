image: ${JAVA_MAIN_IMAGE_NAME}:${JAVA_MAIN_IMAGE_TAG}

variables:
  JAVA_MAIN_IMAGE_NAME: "maven"
  JAVA_MAIN_IMAGE_TAG: "3.5.2-jdk-8"
  JAVA_MAIN_EXECUTE_TEST: ""
  JAVA_MAIN_EXECUTE_DEPLOY: ""
  ORIGINAL_REPOSITORY: ""
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"


cache:
  paths:
    - .m2/repository/

stages:
  - build
  - test
  - package
  - deploy

build:
  stage: build
  before_script:
    - if [ -f "settings.xml" ]; then
        export SETTINGS_VAR="-s settings.xml";
      fi
  script:
    - mvn $MAVEN_CLI_OPTS clean compile ${SETTINGS_VAR}
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_TAG-build"
    paths:
      - "target/"

test:
  stage: test
  before_script:
    - if [ -f "settings.xml" ]; then
        export SETTINGS_VAR="-s settings.xml";
      fi
  script:
    - mvn $MAVEN_CLI_OPTS ${SETTINGS_VAR} test
  except:
    - tags
  only:
    variables:
      - $JAVA_MAIN_EXECUTE_TEST == "true"

package:
  stage: package
  before_script:
    - if [ -f "settings.xml" ]; then
        export SETTINGS_VAR="-s settings.xml";
      fi
    - if [ "${CI_COMMIT_TAG}" == "" ]; then
        curl -s https://singletonsd.gitlab.io/scripts/java/latest/java_update_version.sh | bash /dev/stdin;
      fi
  script:
    - mvn $MAVEN_CLI_OPTS -DskipTests=true ${SETTINGS_VAR} package
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_TAG-package"
    paths:
      - "target/*.jar"
      - "target/lib*/*.jar"
      - "pom.xml"

deploy:
  stage: deploy
  before_script:
    - if [ -f "settings.xml" ]; then
        export SETTINGS_VAR="-s settings.xml";
      fi
  script:
    - mvn -DskipTests=true ${SETTINGS_VAR} deploy
  only:
    variables:
      - $CI_PROJECT_PATH == $ORIGINAL_REPOSITORY && $JAVA_MAIN_EXECUTE_DEPLOY == "true"
    refs:
      - master
      - develop
      - tags
